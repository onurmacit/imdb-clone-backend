name: Django CI with Docker Compose

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests using Docker Compose
    runs-on: ubuntu-latest

    env:
      DB_NAME: imdb_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 5432
      SECRET_KEY: test-key-123
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_TASK_ALWAYS_EAGER: True

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create .env file
        run: |
          echo "DB_NAME=${DB_NAME}" > .env
          echo "DB_USER=${DB_USER}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "DB_HOST=${DB_HOST}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "SECRET_KEY=${SECRET_KEY}" >> .env
          echo "CELERY_BROKER_URL=${CELERY_BROKER_URL}" >> .env
          echo "CELERY_TASK_ALWAYS_EAGER=${CELERY_TASK_ALWAYS_EAGER}" >> .env

      - name: Start Web Server
        run: docker-compose run --rm web web
        
      - name: Start Celery Worker
        run: docker-compose run --rm celery celery

      - name: Wait for PostgreSQL to be ready
        run: docker-compose run --rm web bash -c "until pg_isready -h db -p 5432 -U $DB_USER; do sleep 2; done"

      - name: Run Migrations
        run: docker-compose run --rm web python manage.py migrate

      - name: Run Tests
        run: docker-compose run --rm web pytest

      - name: Shut Down Docker Compose Environment
        run: docker-compose down
